import telebot
from telebot import types
from telebot.types import ReplyKeyboardMarkup

from loguru import logger
from decouple import config, UndefinedValueError
import yaml

import sys

from database import database as db

try:
    API_TOKEN = config('BOT_TOKEN')
except UndefinedValueError:
    logger.error('–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±–Ω–∞—Ä—É–∂–∏—Ç—å "BOT_TOKEN"! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–π —Ñ–∞–π–ª.')
    sys.exit(1)

bot = telebot.TeleBot(API_TOKEN)


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤ –∏–∑ YAML-—Ñ–∞–π–ª–∞
def load_texts(file_path):
    with open(file_path, 'r', encoding='utf-8') as f:
        return yaml.safe_load(f)


# –ó–∞–≥—Ä—É–∑–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤
texts = load_texts('texts.yaml')

# –°–ø–∏—Å–æ–∫ —Å —Ç–µ–∫—Å—Ç–∞–º–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –º–µ–Ω—é
menu_buttons = ['üìñ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è', 'üîë –ö–ª—é—á–∏', 'üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞', '‚ÑπÔ∏è –ò–Ω—Ñ–æ']


def keyboard_create(buttons: list[str]) -> ReplyKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É ReplyKeyboardMarkup –∏–∑ —Å–ø–∏—Å–∫–∞ —Å—Ç—Ä–æ–∫.
    :param buttons: –°–ø–∏—Å–æ–∫ –∫–Ω–æ–ø–æ–∫
    :return: Markup –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
    """
    markup = ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add(*buttons)
    return markup


@bot.message_handler(commands=['start'])
def start(message):
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    db_save_result = db.add_user(message.from_user.id)
    markup = keyboard_create(menu_buttons)
    if db_save_result or True:
        bot.send_message(message.chat.id, texts['welcome_message'], parse_mode='Markdown')
        bot.send_message(message.chat.id, texts['menu'], reply_markup=markup, parse_mode='Markdown')
    else:
        bot.send_message(message.chat.id, '–∞–≥–∞ –¥–∞.', reply_markup=markup, parse_mode='Markdown')


@bot.message_handler(commands=['menu'])
def menu(message):
    markup = keyboard_create(menu_buttons)
    bot.send_message(message.chat.id, texts['menu'], reply_markup=markup, parse_mode='Markdown')


@bot.message_handler(func=lambda message: message.text == "üìñ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è")
def instruction(message):
    bot.send_message(message.chat.id, "–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ –∏ –±–ª–∞ –±–ª–∞ –±–ª–∞...")


@bot.message_handler(func=lambda message: message.text == "üîë –ö–ª—é—á–∏")
def show_keys(message):
    bot.send_message(message.chat.id, "–ö–ª—é—á–∏ –∏ –æ–ø–ª–∞—Ç–∞ –±–ª–∞ –±–ª–∞ –±–ª–∞...")


@bot.message_handler(func=lambda message: message.text == "üí¨ –ü–æ–¥–¥–µ—Ä–∂–∫–∞")
def support(message):
    bot.send_message(message.chat.id, texts['support_message'], parse_mode='Markdown')


@bot.message_handler(func=lambda message: message.text == "‚ÑπÔ∏è –ò–Ω—Ñ–æ")
def info(message):
    bot.send_message(message.chat.id, "–∏–Ω—Ñ–æ")


if __name__ == '__main__':
    logger.info("–ó–∞–ø—É—Å–∫ telegram –±–æ—Ç–∞...")
    bot.polling(none_stop=True)
